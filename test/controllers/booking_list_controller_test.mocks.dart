// Mocks generated by Mockito 5.4.5 from annotations
// in blkwds_manager/test/controllers/booking_list_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i3;

import 'package:blkwds_manager/models/models.dart' as _i5;
import 'package:blkwds_manager/screens/booking_panel/booking_panel_controller.dart'
    as _i4;
import 'package:blkwds_manager/screens/booking_panel/models/booking_filter.dart'
    as _i6;
import 'package:blkwds_manager/services/preferences_service.dart' as _i8;
import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeColor_1 extends _i1.SmartFake implements _i3.Color {
  _FakeColor_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookingPanelController].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingPanelController extends _i1.Mock
    implements _i4.BookingPanelController {
  @override
  set context(_i2.BuildContext? _context) => super.noSuchMethod(
    Invocation.setter(#context, _context),
    returnValueForMissingStub: null,
  );

  @override
  _i2.ValueNotifier<List<_i5.Booking>> get bookingList =>
      (super.noSuchMethod(
            Invocation.getter(#bookingList),
            returnValue: _FakeValueNotifier_0<List<_i5.Booking>>(
              this,
              Invocation.getter(#bookingList),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<List<_i5.Booking>>(
              this,
              Invocation.getter(#bookingList),
            ),
          )
          as _i2.ValueNotifier<List<_i5.Booking>>);

  @override
  _i2.ValueNotifier<List<_i5.Project>> get projectList =>
      (super.noSuchMethod(
            Invocation.getter(#projectList),
            returnValue: _FakeValueNotifier_0<List<_i5.Project>>(
              this,
              Invocation.getter(#projectList),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<List<_i5.Project>>(
              this,
              Invocation.getter(#projectList),
            ),
          )
          as _i2.ValueNotifier<List<_i5.Project>>);

  @override
  _i2.ValueNotifier<List<_i5.Member>> get memberList =>
      (super.noSuchMethod(
            Invocation.getter(#memberList),
            returnValue: _FakeValueNotifier_0<List<_i5.Member>>(
              this,
              Invocation.getter(#memberList),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<List<_i5.Member>>(
              this,
              Invocation.getter(#memberList),
            ),
          )
          as _i2.ValueNotifier<List<_i5.Member>>);

  @override
  _i2.ValueNotifier<List<_i5.Gear>> get gearList =>
      (super.noSuchMethod(
            Invocation.getter(#gearList),
            returnValue: _FakeValueNotifier_0<List<_i5.Gear>>(
              this,
              Invocation.getter(#gearList),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<List<_i5.Gear>>(
              this,
              Invocation.getter(#gearList),
            ),
          )
          as _i2.ValueNotifier<List<_i5.Gear>>);

  @override
  _i2.ValueNotifier<List<_i5.Studio>> get studioList =>
      (super.noSuchMethod(
            Invocation.getter(#studioList),
            returnValue: _FakeValueNotifier_0<List<_i5.Studio>>(
              this,
              Invocation.getter(#studioList),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<List<_i5.Studio>>(
              this,
              Invocation.getter(#studioList),
            ),
          )
          as _i2.ValueNotifier<List<_i5.Studio>>);

  @override
  _i2.ValueNotifier<bool> get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: _FakeValueNotifier_0<bool>(
              this,
              Invocation.getter(#isLoading),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<bool>(
              this,
              Invocation.getter(#isLoading),
            ),
          )
          as _i2.ValueNotifier<bool>);

  @override
  _i2.ValueNotifier<String?> get errorMessage =>
      (super.noSuchMethod(
            Invocation.getter(#errorMessage),
            returnValue: _FakeValueNotifier_0<String?>(
              this,
              Invocation.getter(#errorMessage),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<String?>(
              this,
              Invocation.getter(#errorMessage),
            ),
          )
          as _i2.ValueNotifier<String?>);

  @override
  _i2.ValueNotifier<_i6.BookingFilter> get filter =>
      (super.noSuchMethod(
            Invocation.getter(#filter),
            returnValue: _FakeValueNotifier_0<_i6.BookingFilter>(
              this,
              Invocation.getter(#filter),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<_i6.BookingFilter>(
              this,
              Invocation.getter(#filter),
            ),
          )
          as _i2.ValueNotifier<_i6.BookingFilter>);

  @override
  _i2.ValueNotifier<List<_i5.Booking>> get filteredBookingList =>
      (super.noSuchMethod(
            Invocation.getter(#filteredBookingList),
            returnValue: _FakeValueNotifier_0<List<_i5.Booking>>(
              this,
              Invocation.getter(#filteredBookingList),
            ),
            returnValueForMissingStub: _FakeValueNotifier_0<List<_i5.Booking>>(
              this,
              Invocation.getter(#filteredBookingList),
            ),
          )
          as _i2.ValueNotifier<List<_i5.Booking>>);

  @override
  void setContext(_i2.BuildContext? context) => super.noSuchMethod(
    Invocation.method(#setContext, [context]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<List<_i5.Booking>> loadBookings() =>
      (super.noSuchMethod(
            Invocation.method(#loadBookings, []),
            returnValue: _i7.Future<List<_i5.Booking>>.value(<_i5.Booking>[]),
            returnValueForMissingStub: _i7.Future<List<_i5.Booking>>.value(
              <_i5.Booking>[],
            ),
          )
          as _i7.Future<List<_i5.Booking>>);

  @override
  _i7.Future<List<_i5.Studio>> loadStudios() =>
      (super.noSuchMethod(
            Invocation.method(#loadStudios, []),
            returnValue: _i7.Future<List<_i5.Studio>>.value(<_i5.Studio>[]),
            returnValueForMissingStub: _i7.Future<List<_i5.Studio>>.value(
              <_i5.Studio>[],
            ),
          )
          as _i7.Future<List<_i5.Studio>>);

  @override
  void updateFilter(_i6.BookingFilter? newFilter) => super.noSuchMethod(
    Invocation.method(#updateFilter, [newFilter]),
    returnValueForMissingStub: null,
  );

  @override
  void resetFilters() => super.noSuchMethod(
    Invocation.method(#resetFilters, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<List<_i5.Project>> loadProjects() =>
      (super.noSuchMethod(
            Invocation.method(#loadProjects, []),
            returnValue: _i7.Future<List<_i5.Project>>.value(<_i5.Project>[]),
            returnValueForMissingStub: _i7.Future<List<_i5.Project>>.value(
              <_i5.Project>[],
            ),
          )
          as _i7.Future<List<_i5.Project>>);

  @override
  _i7.Future<List<_i5.Member>> loadMembers() =>
      (super.noSuchMethod(
            Invocation.method(#loadMembers, []),
            returnValue: _i7.Future<List<_i5.Member>>.value(<_i5.Member>[]),
            returnValueForMissingStub: _i7.Future<List<_i5.Member>>.value(
              <_i5.Member>[],
            ),
          )
          as _i7.Future<List<_i5.Member>>);

  @override
  _i7.Future<List<_i5.Gear>> loadGear() =>
      (super.noSuchMethod(
            Invocation.method(#loadGear, []),
            returnValue: _i7.Future<List<_i5.Gear>>.value(<_i5.Gear>[]),
            returnValueForMissingStub: _i7.Future<List<_i5.Gear>>.value(
              <_i5.Gear>[],
            ),
          )
          as _i7.Future<List<_i5.Gear>>);

  @override
  _i7.Future<int> createBookingInDB(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#createBookingInDB, [booking]),
            returnValue: _i7.Future<int>.value(0),
            returnValueForMissingStub: _i7.Future<int>.value(0),
          )
          as _i7.Future<int>);

  @override
  _i7.Future<bool> createBooking(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#createBooking, [booking]),
            returnValue: _i7.Future<bool>.value(false),
            returnValueForMissingStub: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<int> updateBookingInDB(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#updateBookingInDB, [booking]),
            returnValue: _i7.Future<int>.value(0),
            returnValueForMissingStub: _i7.Future<int>.value(0),
          )
          as _i7.Future<int>);

  @override
  _i7.Future<bool> updateBooking(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#updateBooking, [booking]),
            returnValue: _i7.Future<bool>.value(false),
            returnValueForMissingStub: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> rescheduleBooking(
    _i5.Booking? booking,
    DateTime? newStartDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#rescheduleBooking, [booking, newStartDate]),
            returnValue: _i7.Future<bool>.value(false),
            returnValueForMissingStub: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> deleteBooking(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBooking, [id]),
            returnValue: _i7.Future<bool>.value(false),
            returnValueForMissingStub: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> hasBookingConflicts(
    _i5.Booking? booking, {
    int? excludeBookingId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #hasBookingConflicts,
              [booking],
              {#excludeBookingId: excludeBookingId},
            ),
            returnValue: _i7.Future<bool>.value(false),
            returnValueForMissingStub: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  List<_i5.Booking> getBookingsInRange(DateTime? start, DateTime? end) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingsInRange, [start, end]),
            returnValue: <_i5.Booking>[],
            returnValueForMissingStub: <_i5.Booking>[],
          )
          as List<_i5.Booking>);

  @override
  List<_i5.Booking> getBookingsForDay(DateTime? day) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingsForDay, [day]),
            returnValue: <_i5.Booking>[],
            returnValueForMissingStub: <_i5.Booking>[],
          )
          as List<_i5.Booking>);

  @override
  bool hasBookingsOnDay(DateTime? day) =>
      (super.noSuchMethod(
            Invocation.method(#hasBookingsOnDay, [day]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i3.Color getColorForBooking(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#getColorForBooking, [booking]),
            returnValue: _FakeColor_1(
              this,
              Invocation.method(#getColorForBooking, [booking]),
            ),
            returnValueForMissingStub: _FakeColor_1(
              this,
              Invocation.method(#getColorForBooking, [booking]),
            ),
          )
          as _i3.Color);

  @override
  List<_i5.Booking> getBookingsForProject(int? projectId) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingsForProject, [projectId]),
            returnValue: <_i5.Booking>[],
            returnValueForMissingStub: <_i5.Booking>[],
          )
          as List<_i5.Booking>);

  @override
  _i5.Project? getProjectById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getProjectById, [id]),
            returnValueForMissingStub: null,
          )
          as _i5.Project?);

  @override
  _i5.Member? getMemberById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMemberById, [id]),
            returnValueForMissingStub: null,
          )
          as _i5.Member?);

  @override
  _i5.Gear? getGearById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getGearById, [id]),
            returnValueForMissingStub: null,
          )
          as _i5.Gear?);

  @override
  _i5.Studio? getStudioById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getStudioById, [id]),
            returnValueForMissingStub: null,
          )
          as _i5.Studio?);

  @override
  _i3.Color getStatusColorForBooking(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#getStatusColorForBooking, [booking]),
            returnValue: _FakeColor_1(
              this,
              Invocation.method(#getStatusColorForBooking, [booking]),
            ),
            returnValueForMissingStub: _FakeColor_1(
              this,
              Invocation.method(#getStatusColorForBooking, [booking]),
            ),
          )
          as _i3.Color);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesService extends _i1.Mock
    implements _i8.PreferencesService {}
